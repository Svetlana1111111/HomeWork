'number' + 3 + 3 // number33 -> конкатинація

null + 3 // 3 -> null приводиться до 0 

5 && "qwerty" // qwerty -> && повертає останній вираз якщо всі операнди true, обидва операнди істинні, тому && повертає другий 

+'40' + +'2' + "hillel"; //  42hillel -> +'40' і +'2' перетворююnmcz в числа 40 і 2, gотім 42 конкатенується з рядком "hillel"

'10' - 5 === 6; // false -> 10 приводиться в число і 5 === 6 повертає false

true + false  // 1 -> true приводиться до 1, faise до 0

'4px' - 3 // NaN -> 4px не може перетворитися на число при спробі виконати операцію

'4' - 3 // 1 -> '4' приводиться до числа 4 

'6' + 3 ** 0; //  61 -> 3 ** 0 = 1, Потім рядок '6' конкатенується з 1

12 / '6' // 2 -> '6' приводиться до числа 6. 12 / 6 = 2.

'10' + (5 === 6); // 10false -> 5 === 6 повертає false, і конкатинується з 10 

null == '' // false -> null і '' не рівні за правилом порівняння значень у JavaScript

3 ** (9 / 3); // 27 -> 9 / 3 = 3 і 3 ** 3 = 27.

!!'false' == !!'true'  //  Обидва вирази 'false' і 'true' є істинними, тому обидва перетворюються на true. true == true повертає true

0 || '0' && 1 //  1 ->  0 || '0' повертає '0', оскільки 0 є хибним значенням, '0' && 1 повертає 1, оскільки '0' є істинним значенням

(+null == false) < 1; //  false -> +null приводиться до 0, false — до 0, 0 == 0 повертає true, що приводиться до 1, 1 < 1 повертає false

false && true || true // true -> false && true повертає false, false || true повертає true.

false && (false || true); // false -> false || true повертає true, false && true повертає false

(+null == false) < 1 ** 5; // false -> +null приводиться до 0, false — до 0, 0 == 0 повертає true, що приводиться до 1, 1 ** 5 = 1, 1 < 1 повертає false.